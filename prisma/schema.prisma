datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing"]
}

model Users {
  id               String            @id @default(uuid())
  password         String            @unique
  created          DateTime          @default(now())
  ref              String?
  subscriptionType SubscriptionType? @map("subscription_type")
  stripeCustomerId String?           @unique @map("stripe_customer_id")
  lavaBuyerId      String?           @unique @map("lava_buyer_id")

  @@map("users")
}

enum SubscriptionType {
  Stripe
  Lava
  Cryptomus
}

model CryptomusInvoices {
  id               String   @id @default(uuid())
  created          DateTime @default(now()) @map("created")
  userId           String   @map("user_id")
  orderId          String   @map("order_id")
  status           String
  amount           String
  currency         String
  paymentAmount    String?  @map("payment_amount")
  payerCurrency    String?  @map("payer_currency")
  paymentAmountUsd String?  @map("payment_amount_usd")
  network          String?

  @@index([userId])
  @@map("cryptomus_invoices")
}

model LavaSubscriptions {
  id               String    @id @default(uuid())
  lavaBuyerId      String
  contractId       String?
  parentContractId String?
  status           String?
  type             String?
  timestamp        DateTime?
  errorMessage     String?
  productId        String?
  amount           Float?
  currency         String?

  @@index([lavaBuyerId])
  @@map("lava_subscriptions")
}

model StripeInvoices {
  id          String  @id @default(uuid())
  invoiceId   String
  created     Int
  status      String?
  amount_paid Int
  currency    String
  paid        Boolean
  userId      String

  @@index([userId])
  @@map("stripe_invoices")
}

model Tokens {
  id    String @id
  token String @db.Text
  // token String

  // @@map("tokens")
}
